<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.21.1013.2115                               -->
<workbook original-version='18.1' source-build='2019.2.29 (20192.21.1013.2115)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='NationData (DataNation)' inline='true' name='federated.0d83tya1s00cr21c5wins1g68q4q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DataNation' name='excel-direct.0ovn5ye1x332qg1di6mi61mlzule'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Ass-9/DataNation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ovn5ye1x332qg1di6mi61mlzule' name='NationData' table='[NationData$]' type='table'>
          <columns gridOrigin='A1:I54:no:A1:I54:0' header='yes' outcome='6'>
            <column datatype='string' name='CityName' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Capital Ind' ordinal='2' />
            <column datatype='string' name='Metro Ind' ordinal='3' />
            <column datatype='integer' name='Population Current' ordinal='4' />
            <column datatype='integer' name='Birth' ordinal='5' />
            <column datatype='real' name='Death Rate' ordinal='6' />
            <column datatype='real' name='Per Person Income' ordinal='7' />
            <column datatype='date' name='Last Election Date' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CityName]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>CityName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital Ind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Capital Ind]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Capital Ind</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro Ind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metro Ind]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Metro Ind</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Current</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Current]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Population Current</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Birth]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Birth</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Death Rate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per Person Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per Person Income]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Per Person Income</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Election Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Election Date]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Last Election Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NationData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I54:no:A1:I54:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption=' City' datatype='string' name='[CityName - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0d83tya1s00cr21c5wins1g68q4q].[CityName]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [CityName], &quot;[&quot;, 1 ) )' />
      </column>
      <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
      <column datatype='real' name='[Death Rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Geo Details'>
          <field>[State]</field>
          <field>[CityName - Split 1]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.481328' measure-ordering='alphabetic' measure-percentage='0.518672' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:Death Rate:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>7.9000000000000004</bucket>
            </map>
            <map to='asterisk'>
              <bucket>9.3000000000000007</bucket>
            </map>
            <map to='asterisk'>
              <bucket>11.6</bucket>
            </map>
            <map to='asterisk'>
              <bucket>13.699999999999999</bucket>
            </map>
            <map to='asterisk'>
              <bucket>34.400000000000006</bucket>
            </map>
            <map to='circle'>
              <bucket>3.6000000000000001</bucket>
            </map>
            <map to='circle'>
              <bucket>8.3000000000000007</bucket>
            </map>
            <map to='circle'>
              <bucket>10.6</bucket>
            </map>
            <map to='circle'>
              <bucket>13.6</bucket>
            </map>
            <map to='circle'>
              <bucket>23.5</bucket>
            </map>
            <map to='diamond'>
              <bucket>8.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>9.4000000000000004</bucket>
            </map>
            <map to='diamond'>
              <bucket>11.699999999999999</bucket>
            </map>
            <map to='diamond'>
              <bucket>14.800000000000001</bucket>
            </map>
            <map to='diamond'>
              <bucket>15.199999999999999</bucket>
            </map>
            <map to='diamond'>
              <bucket>35.0</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>8.1999999999999993</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>10.0</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>13.800000000000001</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>16.800000000000001</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>83.299999999999983</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8.9000000000000004</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>10.1</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>14.4</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>17.199999999999999</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>106.99999999999999</bucket>
            </map>
            <map to='plus'>
              <bucket>7.2999999999999998</bucket>
            </map>
            <map to='plus'>
              <bucket>9.0999999999999996</bucket>
            </map>
            <map to='plus'>
              <bucket>10.9</bucket>
            </map>
            <map to='plus'>
              <bucket>12.4</bucket>
            </map>
            <map to='plus'>
              <bucket>29.0</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>8.4000000000000004</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>10.300000000000001</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>13.5</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>21.100000000000001</bucket>
            </map>
            <map to='square'>
              <bucket>6.7000000000000002</bucket>
            </map>
            <map to='square'>
              <bucket>9.0</bucket>
            </map>
            <map to='square'>
              <bucket>10.800000000000001</bucket>
            </map>
            <map to='square'>
              <bucket>14.699999999999999</bucket>
            </map>
            <map to='square'>
              <bucket>25.700000000000003</bucket>
            </map>
            <map to='times'>
              <bucket>7.4000000000000004</bucket>
            </map>
            <map to='times'>
              <bucket>9.1999999999999993</bucket>
            </map>
            <map to='times'>
              <bucket>11.300000000000001</bucket>
            </map>
            <map to='times'>
              <bucket>12.5</bucket>
            </map>
            <map to='times'>
              <bucket>33.0</bucket>
            </map>
            <map to='triangle'>
              <bucket>8.0999999999999996</bucket>
            </map>
            <map to='triangle'>
              <bucket>9.8000000000000007</bucket>
            </map>
            <map to='triangle'>
              <bucket>11.9</bucket>
            </map>
            <map to='triangle'>
              <bucket>16.5</bucket>
            </map>
            <map to='triangle'>
              <bucket>43.800000000000004</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Death Rate As Per Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='NationData (DataNation)' name='federated.0d83tya1s00cr21c5wins1g68q4q' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0d83tya1s00cr21c5wins1g68q4q'>
            <column caption=' City' datatype='string' name='[CityName - Split 1]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0d83tya1s00cr21c5wins1g68q4q].[CityName]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [CityName], &quot;[&quot;, 1 ) )' />
            </column>
            <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Death Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CityName - Split 1]' derivation='None' name='[none:CityName - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0d83tya1s00cr21c5wins1g68q4q].[sum:Death Rate:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0d83tya1s00cr21c5wins1g68q4q].[sum:Death Rate:qk]' />
              <shape column='[federated.0d83tya1s00cr21c5wins1g68q4q].[sum:Death Rate:ok]' />
              <lod column='[federated.0d83tya1s00cr21c5wins1g68q4q].[none:State:nk]' />
              <lod column='[federated.0d83tya1s00cr21c5wins1g68q4q].[none:CityName - Split 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0d83tya1s00cr21c5wins1g68q4q].[Latitude (generated)]</rows>
        <cols>[federated.0d83tya1s00cr21c5wins1g68q4q].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D3E44586-5F1C-4BCB-B030-B3629E7F45B6}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Death Rate As Per Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0d83tya1s00cr21c5wins1g68q4q].[sum:Death Rate:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0d83tya1s00cr21c5wins1g68q4q].[sum:Death Rate:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F41BDFCE-60EB-4FE4-B6D8-2142CE6F7859}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Death Rate As Per Cities' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
